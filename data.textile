h1.  mut4j data dictionary

@date_time@ = time stamp (01/02/2010 11:31:24:08 GMT)
@session_id@ = a unique id representing a harvest session (872-98123-9123AE)

@src_info@ = package and class, method, line number, and column of the originating java code
<pre>
['com.foo.bar.SomeDAO', 'theMethod', 302, 48 ]
</pre>

@preparedstmt@ = the prepared statement w/out params replaced 
<pre>
select * from foo where gpa > ? AND age >= ? AND semester = ? 
</pre>

@sql@ = the raw sql passed to the db 
<pre>
select * from foo where gpa > 3 AND age >= 21 AND semester = 'Fall' 
</pre>

@params@ = some grammatical representation of all the paramters being replaced. Could be a JSON-like representation or a related table.:

<pre>
params : [
 'gpa' : {'value':3.9, type='float'},
 'semseter' : {'value':'fall', type='string'}, //or
 'gpa' : [3.9,'float'],
 'semester' : ['Fall','String']

]
</pre>

@sql_predicate@ = the WHERE clause (if any). Note that predicates may exist in select statement but are not addressed yet
<pre>
where gpa > 3 AND age >= 21 AND semester = 'Fall' 
</pre>

@predicate@ = the raw form of the predicate 
<pre>
a & b & c
</pre>

@mutation_rules@ = an array of bit strings generated by Gary's tool:
<pre>
 [101,100,011,110] 
</pre>

@mutated_queries@ = the mutated queries based on @mutation_rules@
<pre>
[
  '101':   where gpa > 3 AND age >= 21 AND semester = 'Fall'
  '100':   where gpa > 3 AND age >= 21 AND semester = 'Fall'
  '011':   where gpa > 3 AND age >= 21 AND semester = 'Fall'
  '110':   where gpa > 3 AND age >= 21 AND semester = 'Fall'
] 
</pre>



